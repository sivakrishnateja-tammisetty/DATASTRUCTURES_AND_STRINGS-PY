1. DICTIONARY:
-------------

*Dict has key value pair form of data.
* Dict's are orderd (python 3.7 & above version).
*Does not support indexing.
*Data can be accessing using key.

* WAYS TO CREAT DICT:
 -------------------

  * 1st way ==>  d=dict()
  *2nd way ==>  d={}



Eg:
d={}
print(d)  o/p: {}

d=dict()
print(d)   o/p:{}


d={'key1':1,'key2':2,'key3':3}
print(d) o/p: {'key1':1,'key2':2,'key3':3}
print(d['key2']) o/p: 2




*for checking type():
 --------------------
*syntax ==> type()

d={'a':'apple','b':'ball','c':'cat'}
print(type(d),d)

o/p: <class 'dict'> {'a':'apple','b':'ball','c':'cat'}



*To find length:
 --------------

*syntax ==> len()


Eg:
d={'a':'apple','b':'ball','c':'cat'}
print(len(d))



*Updating dictionary:
 --------------------
 *while updating value ,key was not there in dict,then it will add in dict.
 *if key was already exist in dict,then it will update the value.

 Eg:
 d={'a':'apple','b':'ball','c':'cat'}
 print(d)
 d['b']="bat"
 print(d)

o/p:
{'a':'apple','b':'ball','c':'cat'}
{'a':'apple','b':'bat','c':'cat'}



*Updating mutliple values:
 --------------------------
* we can use update method.
*syntax  ==> d.update()


Eg:
d={'a':'apple','b':'ball','c':'cat'}
print(d)
new={'d':"dog",'e':"eagle"}
d.update(new)
print(d)

o/p:
{'a':'apple','b':'ball','c':'cat'}
{'a':'apple','b':'ball','c':'cat','d':'dog','e':'eagle'}



* DELETION OPERATIONS IN DICT:
  ---------------------------

 *pop(key) ==>It will remove specified key from dict and return that corresponding value.
 *If key was not found it will return default if given, otherwise KeyError.

 Eg:
 d={'a':'apple','b':'ball','c':'cat'}
 print(d.pop('b'))
 print(d.pop('g',"Not found"))
 print(d.pop('g')) 


o/p:
ball
Not found
key Error




*popitem()  ==> It deletes the last item of the dictionary & returns that last item.
Eg:
d={'a':'apple','b':'ball','c':'cat'}
print(d.popitem())
print(d)

o/p:
('c', 'cat')
{'a':'apple', 'b':'ball'}

















                                                                                   DICTIONARIES FUNCTIONS:
                                                                                    ---------------------



* ADDING ELEMENTS TO DICT:
  -----------------------
 * syntax ==> d[key]=value

 Eg:
 d={'a':'apple','b':'ball','c':'cat'}
 print(d) o/p: {'a': 'apple', 'b': 'ball', 'c': 'cat'}
 d['d']='dog'
 print(d) o/p: {'a': 'apple', 'b': 'ball', 'c': 'cat', 'd': 'dog'}







* CHECKING WHETHER KEY IS PRESENT IN DICT OR NOT:
  ----------------------------------------------
 *syntax ==> key in dictionary
 * It will return True/False

 Eg:
 d={'a':'apple','b':'ball','c':'cat'}
 print( 'a' in d)  o/p: True
 print(' g' in d) o/p: False


* TO GET ALL KEYS  AND ALL VALUES FROM DICT:
  -----------------------------------------
*syntax ==> d.keys()

Eg:
d={'a':'apple','b':'ball','c':'cat'}
print(d.keys())

o/p: dict_keys(['a', 'b', 'c'])


*syntax ==> d.values()


Eg:
d={'a':'apple','b':'ball','c':'cat'}
print(d.values())

o/p: dict_values(['apple', 'ball', 'cat'])




*ACCESSING DICT DATA IN 2 WAYS:
 -----------------------------

 *1st way ==> using key
 *2nd way ==> using get()

 * We are using get method to avoid error (KeyError).

 *syntax ==> d[key]
 *syntax ==> d.get(key)  (or) d.get(key,"msg")

*NOTE: accessing using key,if key was not found ,then its show key error. To avoid that KeyError ,we use get() method,it will not through error its show None or we want to display our own msg.


Eg:
d={'a':'apple','b':'ball','c':'cat'}
print(d['d'])   o/p: KeyError
print(d.get('d')) o/p: None
print(d.get('d',"Not Found"))



